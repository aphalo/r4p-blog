---
title: "Flow of code execution"
subtitle: "Changing thesequence"
author: "Pedro J. Aphalo"
date: "2023-11-14"
format:
  html:
    mermaid:
      theme: neutral
code-fold: show
---

# Unconditional sequence

```{mermaid}
flowchart LR
  st1[statement 1] --> st2[statement 2] --> st3[statement 3] --> st4[etc.]

```

```{r}
a <- 123
b <- a * 2
print(b)
```

```{mermaid}
flowchart LR
  st1["a <- 123"] --> st2["b <- a * 2"] --> st3["print(b)"]
```

# Compound statement

```{mermaid}
flowchart LR
  st1[statement 1] --> st2[statement 2]
  subgraph "compound statement" 
  st2 --> st3[statement 3] 
  end 
  st3 --> etc.  
```


```{r}
a <- 123
{
  b <- a * 2
  print(b)
}
```

```{mermaid}
flowchart LR
  st1["a <- 123"] --> st2["b <- a * 2"]
  subgraph "compound statement" 
  st2 --> st3["print(b)"] 
  end 
  st3 --> etc.  
```

# Conditional sequence
## `if` statement

```{mermaid}
flowchart LR
  st1[statement 1] --> st2{condition} --FALSE--> st4[statement 4]
  st2 --TRUE--> st3[statement 3]
  st3 --> st4
```

```{r}
a <- 123
if (a > 0) {
  print("'a' is positive")
}
print(a)
```


```{mermaid}
flowchart LR
  st1["a <- 123"] --> st2{"if (a >= 0)"} --FALSE--> st4["print(a)"]
  st2 --TRUE--> st3["print(#quot; 'a' is positive#quot;)"]
  st3 --> st4
```

## `if`... `else` statement

```{mermaid}
flowchart LR
  st1[statement 1] --> st2{condition} --FALSE--> st3a[statement 3a]
  st2 --TRUE--> st3b[statement 3b]
  st3a --> st4[statement 4]
  st3b --> st4
```

```{r}
a <- 123
if (a >= 0) {
  print("'a' is positive")
} else {
  print("'a' is negative")
}
print(a)
```

```{mermaid}
flowchart LR
  st1["a <- 123"] --> st2{"if (a >= 0) ... else ..."} --FALSE--> st3a["print(#quot; 'a' is negative#quot;)"]
  st2 --TRUE--> st3b["print(#quot; 'a' is positive#quot;)"]
  st3a --> st4["print(a)"]
  st3b --> st4
```

