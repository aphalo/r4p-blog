---
title: "Functional analysis of spectra with 'photobiology' and 'fda.usc'"
subtitle: "From 'photobiology' to 'fda.usc' and back."
author: "Pedro J. Aphalo"
date: "2023-06-02"
date-modified: "2025-08-06"
keywords: [photobiology pkg, photobiologyInOut pkg, fda.usc pkg, ggspectra pkg, functional data analysis]
categories: [Photobiology examples]
abstract: |
  Explanations and example R code for applying functional data analysis to spectral data stored in the classes defined in package [photobiology](https://docs.r4photobiology.info/photobiology/) and plotting the obtained deepest curve with [ggplot2](https://ggplot2.tidyverse.org/) and [ggspectra](https://docs.r4photobiology.info/ggspectra/) and aplying ANOVA-like methods to compare groups of spectra. The exchange of the spectral data between packages is done with functions from package [photobiologyInOut](https://docs.r4photobiology.info/photobiologyInOut/).
editor: 
  markdown: 
    wrap: 72
code-fold: true
format:
  html: 
    code-link: true
    code-tools: true
---

::: callout-tip
In this page code chunks are "folded" so as to decrease the clutter when
searching for examples. Above each plot you will find a small triangle
followed by "Code". Clicking on the triangle "unfolds" the code chunk
making visible the R code used to produce the text or graphic output.

Except for the loading of packages shown in section **Preliminaries** code 
examples continue through out each section.

All "words" defined in base R or in extension packages are linked to the
corresponding HTML-rendered help pages.

The code in the chunks can be copied by clicking on the top right
corner, where an icon appears when the mouse cursor hovers over the code
listing.
:::

## Introduction

I have started measuring time series of spectra, and one approach to summarizing
them and for removing outlier curves is to use _functional data analysis_ (FDA).
Sets of spectra can be also compared using an asymptotic method reminiscent of
one-way ANOVA. Package 'fda.usc' and in particular objects of class `fdata`
provide a unified entry point to many different methods for FDA.

Package 'photobiologyInOut' (>= 0.4.27) exports functions `spct2fdata()`and
`fdata2spct()` making  it easy to convert objects of classes `source_spct`,
`response_spct`, `filter_spct` and `reflector_spct` into objects of class
`fdata` and back.

In this page I am collecting examples of code that I have found useful. The
examples use `source_spct` objects, but the code can be adapted to other types
of spectral data.

In this first version of the page I use package 'fda.usc' for all examples.
Newer approaches are available for FANOVA, such as those implemented in package
'fdANOVA'.

## Preliminaries

```{r, message=FALSE}
library(photobiology)
library(photobiologyInOut)
library(ggspectra)
library(magrittr)
library(rlang)
library(fda.usc)
library(lubridate)

theme_set(theme_bw())

# energy_as_default()
photon_as_default()
```

## Deepest curve

The word "deepest" refers to the curve that is farthest from the extreme ones,
based on some criterion. The examples below use the median or mean as criterion.
In most cases, the criteria are applied to previously smoothed curves, while
the returned value is one of the original curves unmodified.

::: callout-tip
Even when using as criterion medians or means, the _deepest curve_ is not the
same as a median or mean curve. For spectra the _deepest curve_ is one of the 
observed spectral curves, while a median or mean spectrum, is that computed
as the median or mean at each wavelength, thus, different from any of the
observed spectral curves. Furthermore, to compute a median or mean curve, all
the curves to be compared must share the same wavelength values.
:::

Examples in this chapter are for a time series of 45 spectra, measured at a frequency of one per minute close to noon on a summer day under broken clouds. 

```{r}
load("sun.cosine.spct.Rda")
sun.cosine.spct <- clean(sun.cosine.spct)
when_measured(sun.cosine.spct)[c(1, 45)]
how_measured(sun.cosine.spct)
```

As array spectrometers have a variable wavelength step between pixels, we re-express the spectra at 1 nm resolution. We also trim the shortest and longest wavelengths as these spectral irradiance values are noisy.

```{r}
subset2mspct(sun.cosine.spct) %>%
  clean() %>%
  trim_wl(c(280, 1000)) %>%
  interpolate_mspct(length.out = 721) -> sun.cosine.mspct
```

### Deepest spectrum based on median


```{r}
autoplot(sun.cosine.mspct, 
         annotations = c("-", "peaks")) +
  geom_line(data = . %>% spct2fdata() %>% func.med.FM() %>% fdata2spct(),
            colour = "red", linewidth = 1, alpha = 0.67)
```


### Deepest spectrum based on mean

```{r}
autoplot(sun.cosine.mspct, 
         annotations = c("-", "peaks")) +
  geom_line(data = . %>% spct2fdata() %>% func.mean() %>% fdata2spct(),
            colour = "blue", linewidth = 1, alpha = 0.67)
```

### Deepest spectrum based on trimmed mean

```{r}
autoplot(sun.cosine.mspct, 
         annotations = c("-", "peaks")) +
  geom_line(data = . %>% spct2fdata() %>% func.trim.FM(trim = 0.25) %>% fdata2spct(),
            colour = "green", linewidth = 1, alpha = 0.67)
```

::: callout-note
# Deepest spectrum vs. summary spectrum

The deepest spectrum is the measured spectrum considered to be most representative of a collection of spectra. A summary spectrum, such as median spectrum is computed by applying the summary function, here median, across spectra, wavelength by wavelength. In this example, the two spectra are very similar, although not identical. This is because the shape of the spectra in the collection remains similar in spite of the variation in overall _y_-value.

```{r}
median.spct <- s_median(sun.cosine.mspct)
deepest_med.spct <- mspct2fdata(sun.cosine.mspct) %>% func.med.FM() %>% fdata2spct()

ggplot() +
  geom_line(data = median.spct,
            mapping = aes(w.length, s.q.irrad)) +
  geom_line(data = deepest_med.spct,
            mapping = aes(w.length, s.q.irrad), 
            colour = "red")
```

Different summaries can be applied, for example, quantiles can be computed and plotted.

```{r}
quantiles.spct <- rbindspct(s_quantile(sun.cosine.mspct), idfactor = "Quantile")

ggplot() +
  geom_line(data = rbindspct(sun.cosine.mspct, idfactor = "Spectrum"), 
            mapping = aes(x = w.length, y = s.q.irrad, group = Spectrum), 
            alpha = 0.12) +
  geom_line(data = quantiles.spct,
            mapping = aes(x = w.length, y = s.q.irrad, colour = Quantile))
```

:::

## Functional one-way ANOVA

We compare measurements done in parallel with two spectrometers with different entrance optics. Ten spectra were acquired once every 40 s inside a mixed forest next to a forest edge. A flat diffuser with cosine response and a hemispherical (or dome-shaped) diffuser with increased response at low angles of incidence are compared. 

```{r}
load("cos.A2.2m.series.spct.Rda")
load("dome.A2.2m.series.spct.Rda")
```

As the two spectrometers even with identical configuration have slightly different wavelength calibrations for the individual pixels in the array, we need to re-express the spectra on identical wavelengths. We also trim the shortest and longest wavelengths as these spectral irradiance values are noisier.

```{r}
when_measured(cos.A2.2m.series.spct)[c(1, 10)]
cat(how_measured(cos.A2.2m.series.spct))
shade.cosine.mspct <- subset2mspct(cos.A2.2m.series.spct) %>%
  clean() %>%
  trim_wl(c(280, 1000)) %>%
  interpolate_mspct(length.out = 721)
```

```{r}
when_measured(dome.A2.2m.series.spct)[c(1, 10)]
cat(how_measured(dome.A2.2m.series.spct))
shade.dome.mspct <- subset2mspct(dome.A2.2m.series.spct) %>%
  clean() %>%
  trim_wl(c(280, 1000)) %>%
  interpolate_mspct(length.out = 721)
```

We concatenate the collections of spectra.

```{r}
shade.mspct <- c(cosine = shade.cosine.mspct,
                 dome = shade.dome.mspct)
names(shade.mspct)
```

A plot of all 20 spectra.

```{r}
autoplot(shade.mspct) +
  aes(linetype = ifelse(grepl("cosine", spct.idx), "cosine", "dome")) +
  labs(linetype = "Entrance\noptics")
```

Or perhaps more clearly

```{r}
ggplot(shade.mspct) +
  geom_line(aes(colour = ifelse(grepl("cosine", spct.idx), "cosine", "dome")),
            alpha = 0.25) +
  labs(colour = "Entrance\noptics") +
  scale_y_s.q.irrad_continuous() +
  scale_x_wl_continuous()
```

We test in a one-way ANOVA if the spectra differ, and they do differ significantly. This procedure is computationally demanding and thus time consuming. In cases with less clear-cut results it is worthwhile to increase `nboot` to at least its default of 100.

```{r}
shade.fda <- mspct2fdata(shade.mspct)
shade.anova <-
  fanova.onefactor(shade.fda,
                   group = factor(rep(c("cosine", "dome"), each = 10L)),
                   plot = TRUE,
                   nboot = 25)
shade.anova
shade.anova$pvalue
```

To test if the shape of the spectra differs, we first scale them to equal area under the curve, and repeat the ANOVA analysis. The rightmost plot gives a distribution of
_P_-values from booststrap with n = 25. The red vertical line 

```{r}
shade_scaled.fda <- 
  mspct2fdata(fscale(shade.mspct, f = irrad))
shade_scaled.anova <-
  fanova.onefactor(shade_scaled.fda,
                   group = factor(rep(c("cosine", "dome"), each = 10L)),
                   plot = TRUE,
                   nboot = 25)
shade_scaled.anova
shade_scaled.anova$pvalue
```

## References

```{r}
citation('fda.usc')
```

```{r}
citation('photobiology')
```
