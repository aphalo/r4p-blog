---
title: "Multiple comparisons with 'ggpmisc'"
subtitle: "Letter labels and labelled bars"
author: "Pedro J. Aphalo"
date: "2023-08-04"
date-modified: "2023-08-04"
keywords: [ggplot2 pkg, ggpp pkg, ggpmisc pkg, data labels, plot annotations, pairwise]
categories: [Plotting examples]
abstract: |
  Examples of plots with pairwise labels and letter labels created with `stat_multcomp()` from R package 'ggpmisc'. Function `stat_multcomp()` computes and adds to ggplots the results from multiple comparison tests as labels. Multiple comparisons based on Tukey and Dunnet contrasts are demonstrated.
editor: 
  markdown: 
    wrap: 72
code-fold: true
format:
  html: 
    code-link: true
    code-tools: true
draft: true
---

::: callout-warning
**This page is still a draft. The examples make use of future version 0.5.4 of package
'ggpmisc' which is under development and thus not yet available through CRAN. It
can be installed from the [git repository at
GitHub](https://github.com/aphalo/ggpmisc).**

Code examples will be expanded and the text will be revised as the
development of packages 'ggpp' and 'ggpmisc' advances in the next few weeks.
:::

::: callout-tip
In this page most code chunks are "folded" so as to decrease the clutter when
searching for examples. A few code chunks that are reused across several plots
are by default unfolded to make them more visible. Above each plot you will find
one or more "folded" code chuncks signalled by a small triangle followed by
"Code". Clicking on the triangle "unfolds" the code chunk making visible the R
code used to produce the plot.

The code in the chunks can be copied by clicking on the top right
corner, where an icon appears when the mouse cursor hovers over the code
listing.

The `</> Code` drop down menu to the right of the page title makes it possible
to unfold all code chunks and to view the Quarto source of the whole web page.

Names of functions and other R objects are linked to the corresponding on-line
help pages. The names of R extension packages are linked to their documentation
web sites when available.
:::

## Introduction

Here you will find examples of ggplots including labels based on multiple comparisons across levels of a factor mapped to _x_ aesthetic. The labes segments have
been added to the plots with statistic `stat_mulltcom()` defined in package
[ggpp](https://docs.r4photobiology.info/ggpmisc/) available at CRAN.

Package [ggpmisc](https://docs.r4photobiology.info/ggpmisc/) imports and 
reexports all definitions from [ggpp](https://docs.r4photobiology.info/ggpp/)
as well as from [ggplot2](https://ggplot2.tidyverse.org/).

::: callout-important
One needs to always check that annotations do not occlude anything
significant, such as observations in the base plot. This needs special
care when using annotations together with batch plotting. Either ensure
that the scale limits of the base plot are expanded to avoid overlap or
that the layer with the equations is the lowest one, i.e., added to the
plot first.
:::

## Plot annotations for multiple comparison tests

Data labels add textual information directly related to individual data
points (shown as glyphs). Text position in this case is dependent on the
scales used to represent data points. Text is usually displaced so that
it does not occlude the glyph representing the data point and when the
link to the data point is unclear, this link is signalled with a line
segment or arrow. Data labels are distinct from annotations in that they
contribute directly to the representation of data on a plot or map.

Annotations differ from data labels, in that their position is decoupled
from their meaning. Insets can be thought as larger, but still
self-contained annotations. In most cases the reading of inset tables
and plots depends only weakly on the plot or map in which they are
included.

In the case of annotations and insets the designer of a data
visualization has the freedom to locate them anywhere, as long as they
do not occlude features used to describe data. I will use the term
annotation irrespective if the "labels" are textual or graphical.

The letter labels and labelled segments used to highlight pairwise comparisons
are a special case as they behave as data labels along the axis onto which an
explanatory factor has been mapped, usually _x_, but as annotations along the
axis onto which a continuous numeric variable has been mapped, usually _y_.

::: callout-caution
Multiple comparisons are in most cases post-hoc tests in many cases including all possible pairwise constrasts (Tukey contrasts) or every treatment individually against a control condition (Dunnet contrasts). **They should be seens as a way of invetigating the source of an overall significant difference. Consequently, multiple comparisons should be applied only if the main effect of the factor or equivalent _a priori_ planned and orthogonal test is in itself significant but skipped otherwise.**
:::

Layer function `stat_multcomp()` first fits a model (a linear model by default) and only if the main effect is significant, it applies the multiple comparison test with the required adjustment to the _P_-values. By default `"Tukey"` contrasts are computed.

The returned data contains both numeric and ready formatted character strings. The returned value and default geometry used depends on the type of label.

## Tukey constrats

