---
title: "Plot insets"
author: "Pedro J. Aphalo"
date: today
categories: [Gallery, Plot insets, ggpp pkg]
editor: 
  markdown: 
    wrap: 72
---

## Introduction

The use of insets in plots was rather frequent when plots where drawn
using ink and pen by draftsmen. With the advent of computer-drawn plots
they became less common. In many situations they are very useful. In
this gallery I give examples of plots with insets created using packages
'ggplot2' and 'ggpp'.

Insets are not normally used for data exploration, they are in most
cases used in publications and reports, either to provide context or
save space.

::: callout-important
One needs to always check that insets do not occlude anything
significant, such as observations in the base plot. This makes insets
unsuitable for automation, unless the scale limits of the base plot are
expanded to ensure that no overlap is possible.
:::

## Preliminaries

The code used is shown above each plot and can be copied. We first load
the packages we will use.

```{r, message=FALSE}
library(ggpp)
library(tibble)
```

## Inset plots within plots

Inset plots are most frequently annotations. They can be used to zoom in
to a portion of the data, to show a less important property of
observations, or more commonly for maps, to show a broader region to
provide recognizable context.

### Zoom in

```{r}
# zoom in region
zoom.region <- list(x = c(4.9, 6.2), y = c(13, 21))

# main plot
p.base <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +
  geom_point()

# inset zoomed-in plot
p.inset <- p.base + 
  coord_cartesian(xlim = zoom.region$x, ylim = zoom.region$y) +
  labs(x = NULL, y = NULL) +
  theme_bw(8) +
  scale_colour_discrete(guide = "none")

# whole plot using annotate()
p.combined <- p.base + 
  annotate(geom = "plot_npc", npcx = 0.95, npcy = 0.95, label = p.inset)

# highlight zoomed-in region
p.combined + 
  annotate(geom = "rect", 
           xmin = zoom.region$x[1], xmax = zoom.region$x[2], 
           ymin = zoom.region$y[1], ymax = zoom.region$y[2],
           linetype = "dotted", fill = NA, colour = "black")
```

### Zoom out

```{r}
# zoom in region
zoom.region <- list(x = c(4.9, 6.2), y = c(13, 21))

# a plot with zoom area highlighted
p <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +
  geom_point() + 
  annotate(geom = "rect", 
           xmin = zoom.region$x[1], xmax = zoom.region$x[2], 
           ymin = zoom.region$y[1], ymax = zoom.region$y[2],
           linetype = "dotted", fill = NA, colour = "black")

# inset whole-plot 
p.inset <- p  +
  labs(x = NULL, y = NULL) +
  theme_bw(8) +
  scale_colour_discrete(guide = "none")

# main zoomed-in plot
p.base <- p + 
  coord_cartesian(xlim = zoom.region$x, ylim = zoom.region$y) +
  expand_limits(y = 24) 

# whole plot using annotate()
p.base + 
  annotate(geom = "plot_npc", npcx = 0.98, npcy = 0.98, label = p.inset) +
  scale_y_continuous(expand = expansion(mult = c(0.05, 0.20)))

```

### A summary plot

```{r}
# column plot of summaries as inset
p.inset <- 
  ggplot(mpg, aes(factor(cyl), hwy, fill = factor(cyl))) +
  stat_summary(geom = "col", fun = mean, width = 2/3) +
  labs(x = "Number of cylinders", y = NULL, title = "Means") +
  scale_fill_discrete(guide = "none")

# scatter plot as main plot
p.base <- 
  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +
  geom_point() +
  labs(x = "Engine displacement (l)", y = "Fuel use efficiency (MPG)",
       colour = "Engine cylinders\n(number)") +
  theme_bw()

# plot with inset plot using annotate()
p.base +
  annotate("plot_npc", npcx = 0.97, npcy = 0.98, label = p.inset + theme_bw(8))

```

### Ancillary data

```{r}
# box plot as inset
p.inset <- 
  ggplot(mpg, aes(factor(cyl), hwy, fill = factor(cyl))) +
  stat_boxplot() +
  labs(x = "Engine cylinders (number)", y = "") +
  scale_fill_discrete(guide = "none")

# scatter plot as main plot
p.base <- 
  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +
  geom_point() +
  labs(x = "Engine displacement (l)", y = "Fuel use efficiency (MPG)",
       colour = "Engine\ncylinders\n(number)") +
  theme_bw()

# plot with inset plot using annotate()
p.base +
  annotate("plot_npc", 
           npcx = 0.97, npcy = 0.98, 
           label = p.inset + theme_bw(9), 
           vp.width = 0.6, vp.height = 0.4) # relative size of inset
```

### As data labels

In the examples above we used `annotate()` as it is the easiest
approach. However, `annotate()` does not support adding different
annotations to different panels in a faceted plot. Very small plots can
sometimes function as data labels, specially in maps. In both cases we
need to use the geometries directly and pass a tibble as argument to
`data`.

```{r}
# ad hoc function for constructing box plots
make_inset <- 
  function(target.cyl) {
    ggplot(subset(mpg, cyl == target.cyl),
           aes(factor(cyl), hwy)) +
      stat_boxplot() +
      labs(x = "Engine cylinders\n(number)", y = "") +
      scale_fill_discrete(guide = "none") + 
      theme_bw(7)
  }

# list of box plots as insets
p.inset.list <- lapply(unique(mpg$cyl), make_inset)

# tibble to be used as data for plotting insets
inset.df <- tibble(cyl = unique(mpg$cyl),
                   plots =  p.inset.list,
                   npcx = c(0.97, 0.97, 0.0, 0.97),
                   npcy = 0.5)

# facetted scatter plot as main plot
p.base <- 
  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +
  geom_point() +
  labs(x = "Engine displacement (l)", y = "Fuel use efficiency (MPG)",
       colour = "Engine\ncylinders\n(number)") +
  facet_wrap(facets = vars(cyl), labeller = label_both) +
  theme_bw()

# plot with inset plots using geom_plot_npc()
p.base +
  geom_plot_npc(data = inset.df, 
                vp.height = 0.8,
                mapping = aes(npcx = npcx, npcy = npcy, label = plots))

```

## Inset tables within plots

### Summaries

### ANOVA tables

### As data labels

## Graphical objects as insets

### Bitmaps

### Vector graphics
