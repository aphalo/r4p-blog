---
title: "Contrasts and multiple comparisons"
subtitle: "Visualizing them in plots"
author: "Pedro J. Aphalo"
date: 2023-07-22
modified-date: 2023-07-22
draft: true
---

## Introduction

Package 'ggsignif' seems to be the most popular (only?) implementation of
pairwise comparisons for ggplots. I have used this package and it does a a good
job for automating some simple tests, but it has limitations. Recently I wished
to have more flexible formatting base on _plotmath expressions_ of the labels as
well as the ability to adjust _p_-values, multiple comparison procedures or use
fitted contrasts. Adjusting _p_-values is of crucial importance and in my view
should be the default behaviour. There is an issue at GitHub and questions in
StackOverflow wishing this to be supported.

Package 'ggsignif', although maintained, is no longer under active development.
The authors suggest creating pull requests for new features. I studied the code
and it seems to me that the coupling between the statistic and geometry is
unnecessarily tight and would make it difficult to create a pull request that
would fulfil my needs. In particular, the _manual_ mode feels like an afterthought modification to the statistic, and does not follow the expectations of the grammar of graphics that statistics do computations and geometries create a graphical representation. So, I decided to implement from scratch 
enhanced functionality in packages 'ggpp' and 'ggpmisc' similar to that in package 'ggsignif'.

Package 'ggpp' mainly defines geometries and scales that can be useful for the
development of other packages. Package 'ggpmisc' implements mostly statistics
and also imports and re-exports package 'ggpp'. Thus, I added
`geom_text_pairwise()` and `geom_label_pairwise()` to 'ggpp'. This took only a
couple of hours, using the existing code of `geom_text_s()` and `geom_label_s()`
as a base. The user interface is, thus, consistent with that of other related
layer functions in package 'ggpp'. These geometries are fully functional on 
their own and by default make use of `ggplot2::stat_identity()`.

I will implement the actual statistical testing in package 'ggpmisc' in new
statistics that will use these new geometries.


