{
  "hash": "7e578e9594fa7d897f4d0391df8a87c3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggpmisc 0.5.0/0.5.1/0.5.2/0.5.3/0.5.4\"\nsubtitle: \"ggpmisc: Miscellaneous Extensions to 'ggplot2'\"\nauthor: \"Pedro J. Aphalo\"\ndate: 2022-08-05\ndate-modified: 2023-08-14\ncategories: [R Package Update]\nkeywords: [ggpmisc pkg]\n---\n\n\n::: callout-note\n\nAs part of moving the site to Quarto I intend to write a single post to give an\noverview of changes in minor versions of the packages. In this case, all\nversions in the 0.5.x series. I will update this same post in the case of minor\nversion updates, and start a new post when I release the first version in the\n0.6.x series. I hope this will reduce the clutter and still provide a good\noverview of progress. Differences between versions are listed in detail in the\n[NEWS file](https://docs.r4photobiology.info/ggpmisc/news/).\n\n:::\n\n## Overview of changes\n\n_Version 0.5.0_ brings several enhancements to the annotations based on model fits. The most visible change is the new convenience function `use_label()` that greatly simplifies the assembly of labels from components and their mapping to aesthetics. I exemplify its use and some of the other new features below in section **Examples**. Several of the model-fit based statistics now return on request additional variables in `data` adding flexibility. Function `stat_correlation()` now computes confidence intervals for correlation estimates. New functions `keep_tidy()`, `keep_glance()` and `keep_augment()` are wrappers on methods `tidy()`, `glance()` and `augment()` from package 'broom'. These new functions make it possible to keep a trace of the origin of the _\"broom-tidied\"_ outputs similalrly as it is possible with `\"lm\"` objects and other objects returned by R's model fitting functions.\n\n_Version 0.5.1_ brings additional enhancements to the annotations based on model fits to improve traceability. New scales `scale_colour_logFC()`, `scale_color_logFC()` and `scale_fill_logFC()` and revised `scale_colour_outcome()` and `scale_fill_outcome()` add flexibility.\n\n_Version 0.5.2_ fixes bugs and ensures compatibility with updates to 'ggplot2' and 'lubridate'. \n\n_Version 0.5.3_ fixes bugs, brings compatibility with package 'gganimate' and adds parameter `n.min` to all statistics that are based on model fitting or correlation testing functions. Arguments passed to `n.min` make it possible to increase the previously hard-coded limit that remains in most cases as the default.\n\n_Version 0.5.4_ brings `stat_multcomp()` for computing multiple comparisons within the framework of _general linear hypothesis_ as implemented in R package 'multcomp' and annotation of plots with the outcomes.\n\n## Examples\n\nIn this section I demonstrate the use of some of the new features described above.\n\nIn the first plot I add an estimate of the correlation coeficient _R_, and the corresponding _t_-value and _P_-value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpmisc)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(mpg, cyl != 5), aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  stat_correlation(use_label(c(\"R\", \"t\", \"P\")),\n                   label.x = \"right\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-2-1.svg)\n:::\n:::\n\n\nThe displacement volume of car engines is known without error and it can the thought as a possible explanation for the petrol use per distance (MPG or miles per gallon) for highway driving. I fit a linear regression per group, and annotate the plot with the fitted linear model equations, _F_-values and _P_-values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(mpg, cyl != 5), aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"F\", \"P\")),\n                   label.x = \"right\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-3-1.svg)\n:::\n:::\n\n\nIn the case of the petrol use (MPG) in city traffic compared to highway travel the two variables can be expected to be subject to similar error variation and there is no directional cause-effect relationship between them. So, in this case OLS linear regression is not a suitable approach. We use major axis regression instead, and we add to the label, Î¸, the angle in degrees between the two lines that could have been fitted by linear regression using _x_ or _y_ as the explanatory variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(mpg, cyl != 5), aes(cty, hwy)) +\n  geom_point(alpha = 0.2) +\n  stat_ma_line() +\n  stat_ma_eq(use_label(c(\"eq\", \"theta\", \"R2\", \"P\"))) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-4-1.svg)\n:::\n:::\n\n\nMultiple comparisons can be used, for example to test for differences among cars with engines with different numbers of\ncylinders.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(mpg, cyl != 5), aes(factor(cyl), hwy)) +\n  geom_violin() +\n  stat_multcomp() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-5-1.svg)\n:::\n:::\n\n\n::: callout-warning\nThe examples below depend on packages 'gganimate', 'png' and 'gifski' to create the animations. Please, make sure that these packages are installed before running the code chunks below.\n\nAlthough getting the animations to work at the command prompt was easy, getting the same code to work within Quarto was more difficult. The need to explicitly pass arguments to parameters `dev`, `width` and `height` of function `animate()` only applies to Quarto (and possibly R Markdown) code chunks, as defaults work well at the command prompt or in R scripts but trigger errors when rendering Quarto documents.\n\nAs is usually the case with 'ggplot2', the default size used for text and label in layers as well as the theme's base font size need to be increased when rendering plots as high resolution bitmaps. Animated plots are by default rendered first as one bitmap per frame and later merged into animated bitmaps.\n:::\n\nPackage 'gganimate' provides an effective way of showing temporal trends or differences among groups in talks or web pages where animations are supported. As of version 0.5.3 all statistics exported by package 'ggpmisc' can be used in animated plots. Even in animations it is possible to rely on the default automatic positioning of labels based on grouping in the underlying static ggplot. As examples, I animate the last two examples above, the first of them in two different ways.\n\nOne use case is cycling over subsets of data displaying annotations based on model fits to each subset. In this case it is preferable to have the equation label at the same location in each _scene_ of the animation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- \n  ggplot(subset(mpg, cyl != 5), aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"F\", \"P\")),\n               label.x = \"right\",\n               size = 6,\n               vstep = 0) + # all labels at same location\n  theme_bw(16) +\n  transition_states(factor(cyl),\n                    transition_length = 1,\n                    state_length = 3) + \n  enter_fade() +\n  exit_fade()\n\nanimate(p, \n        fps=8, \n        renderer = gifski_renderer(loop = TRUE), \n        dev = 'png',\n        width = 800, height = 500, pointsize = 16)\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-7-1.gif)\n:::\n:::\n\n\nAnother use case is animating the building up of the plot by adding in each successive scene a subset of the data. In this case we accept the default position of the equation labels as they are diaplayed simultaneously in the last frame. Even though we retain looping, we add pauses at the first and last frames. We use a longer pause at the last frame, as this last plot includes all data.\n\nTo prevent endless looping we could add `wrap = FALSE` in `transition_states()`, if well timed this could be would for a talk or as part of a video. However in a web page like this and end pause is most appropriate as we have no control on which frame the reader sees first when scrolling up or down the page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- \n  ggplot(subset(mpg, cyl != 5), aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"F\", \"P\")),\n               size = 6,\n               label.x = \"right\") +\n  theme_bw(16) +\n  transition_states(factor(cyl),\n                    transition_length = 0,\n                    state_length = 1,\n                    wrap = FALSE) + \n  shadow_mark()\n\nanimate(p, \n        fps=2.5,\n        nframes = 30,\n        start_pause = 5, end_pause = 10,\n        renderer = gifski_renderer(loop = TRUE), \n        dev = 'png',\n        width = 800, height = 500, pointsize = 16)\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-8-1.gif)\n:::\n:::\n\n\nIt is also possible to animate the plot so that plot layers are added gradually. In this case I did not use any transition, and having three layers in the plot I reduced the number of frames from the default 100 to only 3, and decreased the frame rate to one frame every four seconds. \n\n\n::: {.cell}\n\n```{.r .cell-code}\np <-\n  ggplot(subset(mpg, cyl != 5), aes(cty, hwy)) +\n  geom_point(alpha = 0.2) +\n  stat_ma_line() +\n  stat_ma_eq(use_label(c(\"eq\", \"theta\", \"R2\", \"P\")),\n             size = 6) +\n  theme_bw(16)+\n  transition_layers(layer_length = 5,\n                    transition_length = 0)\n\nanimate(p, \n        fps=1/4,\n        nframes = 3,\n        renderer = gifski_renderer(), \n        dev = 'png',\n        width = 800, height = 500, pointsize = 16)\n```\n\n::: {.cell-output-display}\n![](ggpmisc-0.5.x_files/figure-html/unnamed-chunk-9-1.gif)\n:::\n:::\n\n\n::: callout-note\n\n[*Documentation web site*](http://docs.r4photobiology.info/ggpmisc/) includes all help pages, with output from all examples and vignettes in HTML format .\n\nPlease raise issues concerning bugs or enhancements to this package through GitHub at <https://github.com/aphalo/ggpmisc/issues>. Pull requests are also welcome.\n\n:::\n",
    "supporting": [
      "ggpmisc-0.5.x_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}