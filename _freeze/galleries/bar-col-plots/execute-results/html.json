{
  "hash": "ee3e0fdbf5ce63e2403b91ba5124b858",
  "result": {
    "markdown": "---\ntitle: \"Data labels in bar plots with 'ggpp'\"\nsubtitle: \"Nudging labels in stacked and dodged bars or columns\" \nauthor: \"Pedro J. Aphalo\"\ndate: today\nkeywords: [ggplot2, ggpp, R, bar plot, column plot, dataviz, data visualization]\ncategories: [ggpp pkg, data labels, plot annotations]\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n## Introduction\n\nHere you will find examples of bar plots and column plots built\nwith packages 'ggplot2' and 'ggpp'. Both packages are\navailable at CRAN. The documentation of [package\n'ggpp'](https://docs.r4photobiology.info/ggpp) is available\non-line.\n\n::: callout-tip\nIn this page code chunks are \"folded\" so as to decrease the clutter when\nsearching for examples. Above each plot you will find a small triangle\nfollowed by \"Code\". Clicking on the triangle \"unfolds\" the code chunk\nmaking visible the R code used to produce the plot. Except for the\nloading of packages shown in section **Preliminaries** code examples are\nin most cases self contained. When they are not, this is indicated by a\ncomment.\n\nThe code in the chunks can be copied by clicking on the top right\ncorner, where an icon appears when the mouse cursor hovers over the code\nlisting.\n:::\n\nFor simplicity, whenever possible I use base R functions instead of\ncontributed R packages. For those packages used only in specific\nexamples I use colon notation to indicate the 'package'.\n\n## Data labels and plot annotations\n\nData labels add textual information directly related to individual data\n\"points\", in this case bar and column segments (shown as glyphs). Text position\nin this case is dependent on the scales used to represent data. Text is\nfrequently displaced so that it does not occlude important plot components and\nwhen the link to the bar or column is unclear, this link is signaled with a line\nsegment or arrow. Data labels are distinct from annotations in that they\ncontribute directly to the representation of data on a plot or map.\n\n## Postion functions\n\nIn column and bar plots, and more generally when either _x_ or _y_ is a discrete\nfactor very frequently functions `position_stack()`, `position_fill()`, \n`position_dodge()`, `position_dodge2()` or `position_jitter()` are used to\nmodify the location of the bars, columns or other geometries. The creates a\ndifficulty because we usually would like to nudge the position of labels. This\ncan be achieved with new position functions from 'ggpp'.\n\nAn additional consideration is keeping in `data` suitable coordinates for\ndrawing a connecting segment or arrow between the displaced bar and an \nadditionally nudged position for the label or text.\n\nAll the position functions described in this section are compatible with most\ngeometries from ggpplot2 and extensions. However, only those from packages\n‘ggpp’ and ‘ggrepel’ (> 0.9.1) plot segments and arrows linking original and\ndisplaced positions as saved by these position functions.\n\n## Preliminaries\n\nThe code used is shown on-demand above each plot and can be copied. We\nfirst load the packages we will use.\n\nWhen package 'ggpmisc' is loaded and attached, packages 'ggpp' and\n'ggplot2' are also attached. The only function from 'ggplot2' that is\nredefined by 'ggpp' is `annotate()`, which remains backwards compatible\nwith 'ggplot2'.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(ggpp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggpp'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    annotate\n```\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\n# library(ggrepel)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\n## Bar and column plots\n\n### Simple examples\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n df <- data.frame(x1 = c(1, 2, 1, 3, -1),\n                  x2 = c(\"a\", \"a\", \"b\", \"b\", \"b\"),\n                  grp = c(\"A\", \"B\", \"C\", \"D\", \"E\"))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = df, aes(x1, x2, group = grp)) +\n   geom_col(aes(fill = grp), width = 0.8,\n            position = position_dodge()) +\n   geom_vline(xintercept = 0) +\n   geom_text(\n     aes(label = grp),\n     position = position_dodgenudge(x = 0.09, direction = \"split\", width = 0.8)) +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](bar-col-plots_files/figure-html/unnamed-chunk-4-1.svg){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n ggplot(data = df, aes(x2, x1, group = grp)) +\n   geom_col(aes(fill = grp), width = 0.75,\n            position = position_dodge(width = 0.75)) +\n   geom_hline(yintercept = 0) +\n   geom_text(aes(label = grp),\n             position = position_dodgenudge(y = 0.1,\n                                            direction = \"split\",\n                                            width = 0.75),\n             size = 3) +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](bar-col-plots_files/figure-html/unnamed-chunk-5-1.svg){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n ggplot(data = df, aes(x1, x2, group = grp)) +\n   geom_col(aes(fill = grp), width = 0.5) +\n   geom_vline(xintercept = 0) +\n   geom_text(\n     aes(label = grp),\n     position = position_stacknudge(vjust = 0.5, y = 0.33)) +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](bar-col-plots_files/figure-html/unnamed-chunk-6-1.svg){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n ggplot(data = subset(df, x1 >= 0), aes(x2, x1, group = grp)) +\n   geom_col(aes(fill = grp), width=0.5, position = position_fill()) +\n   geom_vline(xintercept = 0) +\n   geom_text(\n     aes(label = grp),\n     position = position_fillnudge(vjust = 1, y = -0.05)) +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](bar-col-plots_files/figure-html/unnamed-chunk-7-1.svg){fig-align='center' width=672}\n:::\n:::\n\n\n### Realistic examples\n",
    "supporting": [
      "bar-col-plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}