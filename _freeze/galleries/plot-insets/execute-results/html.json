{
  "hash": "86311998f002602e403c5b07246c2b7a",
  "result": {
    "markdown": "---\ntitle: \"Plot insets\"\nauthor: \"Pedro J. Aphalo\"\ndate: today\ncategories: [Gallery, Plot insets, ggpp pkg]\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n## Introduction\n\nThe use of insets in plots was rather frequent when plots where drawn\nusing ink and pen by draftsmen. With the advent of computer-drawn plots\nthey became less common. In many situations they are very useful. In\nthis gallery I give examples of plots with insets created using packages\n'ggplot2' and 'ggpp'.\n\nInsets are not normally used for data exploration, they are in most\ncases used in publications and reports, either to provide context or\nsave space.\n\n::: callout-important\nOne needs to always check that insets do not occlude anything\nsignificant, such as observations in the base plot. This makes insets\nunsuitable for automation, unless the scale limits of the base plot are\nexpanded to ensure that no overlap is possible.\n:::\n\n## Preliminaries\n\nThe code used is shown above each plot and can be copied. We first load\nthe packages we will use.\n\nWhen package 'ggpp' is loaded and attached, package 'ggplot2' is also attached.\nThe only function from 'ggplot2' that is redefined by 'ggpp' is `annotate()`,\nwhich remains backwards compatible with 'ggplot2'.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggpp'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    annotate\n```\n:::\n:::\n\n\n## Inset plots within plots\n\nInset plots are most frequently annotations. They can be used to zoom in\nto a portion of the data, to show a less important property of\nobservations, or more commonly for maps, to show a broader region to\nprovide recognizable context.\n\n### Using `annotate()`\n\nThe first set of examples show how to use `annotate()` together with the geoms\nfrom package 'ggpp' to add inset plots to single-panel ggplots. The examples\nshow different uses of insets. All examples use data sets available in R or the\npackages loaded. In this examples we use `annotate()` together with `\ngeom_plot_npc()` or `geom_plot()`.\n\n#### Zoom in\n\n`geom_plot_npc()` obeys native plot coordinates instead of data coordinates.\nNPC coordinates are relative to the plotting area and take values in [0..1].\nThey make consistent positioning of annotations easy. Only for this first\nexample we show the use of both `geom_plot_npc()` and `geom_plot()`. In both\ngeoms the default for `hjust` and `vjust` is `\"inward\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# zoom in region\nzoom.region <- list(x = c(4.9, 6.2), y = c(13, 21))\n\n# main plot\np.base <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +\n  geom_point()\n\n# inset zoomed-in plot\np.inset <- p.base + \n  coord_cartesian(xlim = zoom.region$x, ylim = zoom.region$y) +\n  labs(x = NULL, y = NULL) +\n  theme_bw(8) +\n  scale_colour_discrete(guide = \"none\")\n\n# whole plot using annotate() and NPC coordinates\np.combined <- p.base + \n  annotate(geom = \"plot_npc\", npcx = 0.95, npcy = 0.95, label = p.inset)\n\n# highlight zoomed-in region\np.combined + \n  annotate(geom = \"rect\", \n           xmin = zoom.region$x[1], xmax = zoom.region$x[2], \n           ymin = zoom.region$y[1], ymax = zoom.region$y[2],\n           linetype = \"dotted\", fill = NA, colour = \"black\")\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n`geom_plot()` obeys the usual `x` and `y` aesthetics expressed in data \ncoordinates. As shown here, while NPC coordinates are refered to the \nplotting area set by other plot layers, using data cordinates, just as for\ntext labels, results in its expansion as needed to include the inset's\n_x_ and _x_ coordinates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# whole plot using annotate() and data coordinates\np.d.combined <- p.base + \n  annotate(geom = \"plot\", x = 7, y = 50, label = p.inset)\n\n# highlight zoomed-in region\np.d.combined + \n  annotate(geom = \"rect\", \n           xmin = zoom.region$x[1], xmax = zoom.region$x[2], \n           ymin = zoom.region$y[1], ymax = zoom.region$y[2],\n           linetype = \"dotted\", fill = NA, colour = \"black\")\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n#### Zoom out\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# zoom in region\nzoom.region <- list(x = c(4.9, 6.2), y = c(13, 21))\n\n# a plot with zoom area highlighted\np <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() + \n  annotate(geom = \"rect\", \n           xmin = zoom.region$x[1], xmax = zoom.region$x[2], \n           ymin = zoom.region$y[1], ymax = zoom.region$y[2],\n           linetype = \"dotted\", fill = NA, colour = \"black\")\n\n# inset whole-plot \np.inset <- p  +\n  labs(x = NULL, y = NULL) +\n  theme_bw(8) +\n  scale_colour_discrete(guide = \"none\")\n\n# main zoomed-in plot\np.base <- p + \n  coord_cartesian(xlim = zoom.region$x, ylim = zoom.region$y) +\n  expand_limits(y = 24) \n\n# whole plot using annotate()\np.base + \n  annotate(geom = \"plot_npc\", npcx = 0.98, npcy = 0.98, label = p.inset) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.20)))\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### Summary plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# column plot of summaries as inset\np.inset <- \n  ggplot(mpg, aes(factor(cyl), hwy, fill = factor(cyl))) +\n  stat_summary(geom = \"col\", fun = mean, width = 2/3) +\n  labs(x = \"Number of cylinders\", y = NULL, title = \"Means\") +\n  scale_fill_discrete(guide = \"none\")\n\n# scatter plot as main plot\np.base <- \n  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  labs(x = \"Engine displacement (l)\", y = \"Fuel use efficiency (MPG)\",\n       colour = \"Engine cylinders\\n(number)\") +\n  theme_bw()\n\n# plot with inset plot using annotate()\np.base +\n  annotate(\"plot_npc\", npcx = 0.97, npcy = 0.98, label = p.inset + theme_bw(8))\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### Other data or variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# box plot as inset\np.inset <- \n  ggplot(mpg, aes(factor(cyl), hwy, fill = factor(cyl))) +\n  stat_boxplot() +\n  labs(x = \"Engine cylinders (number)\", y = \"\") +\n  scale_fill_discrete(guide = \"none\")\n\n# scatter plot as main plot\np.base <- \n  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  labs(x = \"Engine displacement (l)\", y = \"Fuel use efficiency (MPG)\",\n       colour = \"Engine\\ncylinders\\n(number)\") +\n  theme_bw()\n\n# plot with inset plot using annotate()\np.base +\n  annotate(\"plot_npc\", \n           npcx = 0.97, npcy = 0.98, \n           label = p.inset + theme_bw(9), \n           vp.width = 0.6, vp.height = 0.4) # relative size of inset\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Using `geom_plot()` and `geom_plot_npc()`\n\nIn the examples above we used `annotate()` as it is the easiest\napproach. However, `annotate()` does not support adding different\nannotations to different panels in a faceted plot. Very small plots can\nsometimes function as data labels, specially in maps. In both cases we\nneed to use the geometries directly and pass a tibble as argument to\n`data`.\n\nWhen building `data` object containing the inset plots we need to add a\nlist as a column in a `data.frame`. This is possible as long as the lengths\nmatch, but the `list` object needs to be protected with `I()`, R's identity\nfunction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# faceted scatter plot as base plot\np.base <- \n  ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +\n  geom_point() +\n  labs(x = \"Engine displacement (l)\", y = \"Fuel use efficiency (MPG)\",\n       colour = \"Engine\\ncylinders\\n(number)\") +\n  facet_wrap(facets = vars(cyl), labeller = label_both) +\n  theme_bw()\n\n# ad hoc function for constructing box plots\nmake_inset <- \n  function(target.cyl) {\n    ggplot(subset(mpg, cyl == target.cyl),\n           aes(factor(cyl), hwy)) +\n      stat_boxplot() +\n      labs(x = \"Engine cylinders\\n(number)\", y = \"\") +\n      scale_fill_discrete(guide = \"none\") + \n      theme_bw(7)\n  }\n\n# list of box plots as insets\np.inset.list <- lapply(unique(mpg$cyl), make_inset)\n\n# data frame to be used as data for plotting insets\ninset.df <- data.frame(cyl = unique(mpg$cyl),\n                       plots =  I(p.inset.list),\n                       npcx = c(0.97, 0.97, 0.0, 0.97),\n                       npcy = 0.5)\n\n# plot with inset plots using geom_plot_npc()\np.base +\n  geom_plot_npc(data = inset.df, \n                vp.height = 0.8,\n                mapping = aes(npcx = npcx, npcy = npcy, label = plots))\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWhen using tibbles instead of data frames, the call to `I()` can be omitted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tibble to be used as data for plotting insets\ninset.tb <- \n  tibble::tibble(cyl = unique(mpg$cyl),\n                 plots =  p.inset.list,\n                 npcx = c(0.97, 0.97, 0.0, 0.97),\n                 npcy = 0.5)\n\n# plot with inset plots using geom_plot_npc()\np.base +\n  geom_plot_npc(data = inset.tb, \n                vp.height = 0.8,\n                mapping = aes(npcx = npcx, npcy = npcy, label = plots))\n```\n\n::: {.cell-output-display}\n![](plot-insets_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Inset tables within plots\n\nTables are less frequently used as insets than plots. As annotations, they can be useful \nin two situations: 1) reporting results for the statistical analysis of the\nplotted data, and 2) adding numerical summaries about the data. Very small\ntables can be also useful as data labels to highlight specific observations\nin a plot or data for locations in a map.\n\n### Summaries\n\n### ANOVA tables\n\n### As data labels\n\n## Graphical objects as insets\n\n### Bitmaps\n\n### Vector graphics\n",
    "supporting": [
      "plot-insets_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}