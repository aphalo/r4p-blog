{
  "hash": "10e459c1caabc2fd490793db6d411737",
  "result": {
    "markdown": "---\ntitle: \"Functional analysis of spectra (DRAFT)\"\nsubtitle: \"From 'photobiology' to 'fda.usc' and back.\"\nauthor: \"Pedro J. Aphalo\"\ndate: \"2023-06-02\"\nkeywords: [photobiology pkg, fda.usc pkg, ggspectra pkg, functional data analysis]\ncategories: [Photobiology examples]\neditor: \n  markdown: \n    wrap: 72\nformat:\n  html: \n    code-link: true\n    code-tools: true\n---\n\n\n## Introduction\n\nI have started measuring time series of spectra, and one approach to \nsummarizing them and for removing outlier curves is to use _functional\ndata analisys_ (FDA). Package 'fda.usc' and in particular objects of class\n`fdata` provides a unified entry point to many different methods for FDA.\n\nPackage 'photobiologyInOut' (>= 0.4.27) makes it easy to convert of objects\nof classes `source_spct`, `response_spct`, `filter_spct` and `reflector_spct``\ninto objects of class `fdata` and back.\n\nIn this page I will collect examples of code that I have found useful.\n\n## Deepest curve\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(photobiology)\nlibrary(photobiologyInOut)\nlibrary(ggspectra)\nlibrary(magrittr)\nlibrary(rlang)\nlibrary(fda.usc)\nlibrary(lubridate)\n\ntheme_set(theme_bw())\n\nenergy_as_default()\n```\n:::\n\nThe example data are a time series of 45 spectra of sunlight acquired with a\ntime step of one minute under broken clouds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"sun.cosine.spct.Rda\")\nsun.cosine.spct <- clean(sun.cosine.spct)\nwhen_measured(sun.cosine.spct)[c(1, 45)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$time.01\n[1] \"2023-05-29 09:24:00 UTC\"\n\n$time.45\n[1] \"2023-05-29 10:08:01 UTC\"\n```\n:::\n\n```{.r .cell-code}\nhow_measured(sun.cosine.spct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Acquired with MayaPro2000 (MAYP11278), R (4.3.0), 'ooacquire' (0.3.4.9000) in mode \\\"series-attr\\\",\\n 'rOmniDriver' (0.1.19) and OmniDriver (2.71.0).\"\n```\n:::\n:::\n\n\n### Highlight the \"median\" spectrum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(sun.cosine.spct, \n         annotations = c(\"-\", \"peaks\")) +\n  geom_line(data = . %>% spct2fdata() %>% func.med.FM() %>% fdata2spct(),\n            colour = \"red\", linewidth = 1, alpha = 0.67)\n```\n\n::: {.cell-output-display}\n![](functional-data-analysis_files/figure-html/unnamed-chunk-3-1.svg)\n:::\n:::\n\n\n\n### Highlight the \"trimmed mean\" spectrum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(sun.cosine.spct, \n         annotations = c(\"-\", \"peaks\")) +\n  geom_line(data = . %>% spct2fdata() %>% func.trim.FM(trim = 0.25) %>% fdata2spct(),\n            colour = \"green\", linewidth = 1, alpha = 0.67)\n```\n\n::: {.cell-output-display}\n![](functional-data-analysis_files/figure-html/unnamed-chunk-4-1.svg)\n:::\n:::\n\n\n### Highlight the \"mean\" spectrum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(sun.cosine.spct, \n         annotations = c(\"-\", \"peaks\")) +\n  geom_line(data = . %>% spct2fdata() %>% func.mean() %>% fdata2spct(), # fdata2spct() returns zero rows\n            colour = \"green\", linewidth = 1, alpha = 0.67)\n```\n:::\n",
    "supporting": [
      "functional-data-analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}