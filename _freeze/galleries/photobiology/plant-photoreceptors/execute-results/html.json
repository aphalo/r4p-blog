{
  "hash": "bf15754da3d4aeaecbeacf47e31f41b1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Plant photoreceptors\"\nsubtitle: \"Data and calculations\" \nauthor: \"Pedro J. Aphalo\"\ndate: \"2023-05-11\"\ndate-modified: \"2023-05-13\"\nkeywords: [photobiology pkg, photobiologyPlants pkg]\ncategories: [Photobiology examples]\nabstract: |\n  Explanations and example R code for computations related to the light receptor pigments present in plants and the quantification and manipulation of the amount and quality of light in ways relevant to research on plants and to the cultivation of plants under artificial or modified natural illumination. The R codes makes use of packages in the [R for Photobiology suite](https://www.r4photobiology.info/pages/r4p-introduction.html).\neditor: \n  markdown: \n    wrap: 72\ncode-fold: false\nformat:\n  html: \n    code-link: true\n    code-tools: true\n---\n\n\n::: callout-note\nAs of 2023-07-24 you may get some spurious warnings caused by a pending package\nupdate that I will release in a few weeks time. For rendering this page I have\nsilenced warnings in some code chunks.\n:::\n\n## Introduction\n\nThe R for Photobiology suite of packages contains data and tools useful in\nteaching and research. It includes spectral data for the different families of\nplant photoreceptors, and in the case of phytochromes functions for the\ncalculation of reaction rates as well as the photoequilibrium.\n\nThis page is based on a part of the User Guide of package 'photobiologyPlants'\nbut contains additional examples that make use of packages 'photobiologyLEDs'\nand 'ggrepel'.\n\nFor other photoreceptors currently only spectral data is included in the\nsuite. The examples below demonstrate some possible uses. For the all examples\nto run without warnings the most recent releases of the packages are\nrecommended, and 'photobiologyPlants' (>= 0.4.3) is needed. Original data\nsources are given in the packages documentation and not repeated here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(photobiology)\nlibrary(photobiologyLEDs)\nlibrary(photobiologyPlants)\nlibrary(photobiologyWavebands)\nlibrary(ggspectra)\nlibrary(ggrepel)\n\nphoton_as_default()\ntheme_set(theme_bw() + theme(legend.position = \"bottom\"))\n```\n:::\n\n\n## Phytochrome\n\nPhytochromes are photochromic pigments that interconvert between two stable\nforms, Pr and Pfr through the action of red and far-red photons.\n\n### Photoequilibrium\n\nIn the examples below we use the solar spectral data included in package 'photobiology' as a data frame in object `sun.spct`. \n\nWe can calculate the phytochrome photoequilibrium from spectral irradiance data contained in a `source_spct` object as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPfr_Ptot(sun.spct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.68341\n```\n\n\n:::\n:::\n\n\nWe can also calculate the red:far-red photon ratio, in this second example, for the same spectrum as above\n\n\n::: {.cell}\n\n```{.r .cell-code}\nR_FR(sun.spct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR:FR[q:q] \n 1.266704 \nattr(,\"radiation.unit\")\n[1] \"q:q ratio\"\n```\n\n\n:::\n:::\n\n\nwhich is equivalent to calculating it using package 'photobiology' directly,\nwith wavebands 10 nm wide centred on 660 nm and 735 nm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq_ratio(sun.spct, Red(\"Smith10\"), Far_red(\"Smith10\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR:FR[q:q] \n 1.266704 \nattr(,\"radiation.unit\")\n[1] \"q:q ratio\"\n```\n\n\n:::\n:::\n\n\nWe can, and should whenever spectral data are available, calculate the photoequilibrium as above, directly from these data. It is possible to obtain and approximation in case of the solar spectrum and other broad spectra, using the red:far-red photon ratio. The calculation, however, is only strictly valid, for di-chromatic illumination with 660 nm red plus 735 nm far-red light. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nPfr_Ptot_R_FR(unname(R_FR(sun.spct)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7051691\n```\n\n\n:::\n:::\n\n\nHere we calculated the R:FR ratio from spectral data, but in practice one would use this function only when spectral data is not available as when a R plus FR sensor is used. We can see that in such a case the photoequilibrium calculated is only a  rough approximation. For sunlight, in the example above\nwhen using spectral data we obtained a value of 0.683 in contrast to 0.705 when using the R:FR photon ratio. For other light sources differences can be much larger. Furthermore, here we used the true R:FR ratio calculated from the spectrum, while broad-band red:far-red sensors give only an approximation, which is good for sunlight, but which will be inaccurate for artificial light, unless a special calibration is done for each type of lamp.\n\n::: callout-note \nTo test how big is the error introduced by estimating Pfr:Ptot from the\nR:FR photon ratio we calculate Pfr:Ptot using both approaches for sunlight and\nseven different LEDs sold for plant cultivation. We start by plotting the\nspectra.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsome_leds.mspct <- leds.mspct[plant_grow_leds]\nsome_leds.mspct[[\"sun\"]] <- sun.spct\nsome_leds.mspct <- normalize(some_leds.mspct)\nautoplot(some_leds.mspct, idfactor = \"LED\", span = 101, facets = 2)\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-6-1.svg)\n:::\n:::\n\n\nWe then compute the four ratios for each spectrum and collect them into a \ntable. Kusuma and Bugbee (2021) proposed the use of FR/(R + FR) as an easier to\nunderstand quantity varying between 0 and 1. It can be computed as \n1 / (1 + R:FR), so we also include this so called \"FR fraction\" in the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummaries.tb <- R_FR(some_leds.mspct)\nsummaries.tb[[\"FR:(R+FR)[q:q]\"]] <- 1 / (1 + summaries.tb[[\"R:FR[q:q]\"]])\nsummaries.tb[[\"Pfr:Ptot (spectrum)\"]] <-\n  msdply(some_leds.mspct, Pfr_Ptot)[[2]]\nsummaries.tb[[\"Pfr:Ptot (ratio)\"]] <-\n  Pfr_Ptot_R_FR(R_FR(some_leds.mspct)[[2]])\nnames(summaries.tb)[1] <- \"LED or daylight\"\nknitr::kable(summaries.tb[order(summaries.tb$`Pfr:Ptot (spectrum)`), ], \n             digits = 2)\n```\n\n::: {.cell-output-display}\n\n\n|LED or daylight               | R:FR[q:q]| FR:(R+FR)[q:q]| Pfr:Ptot (spectrum)| Pfr:Ptot (ratio)|\n|:-----------------------------|---------:|--------------:|-------------------:|----------------:|\n|sun                           |      1.27|           0.44|                0.68|             0.71|\n|Ledguhon_10WBVGIR14G24_Y6C_T4 |      1.73|           0.37|                0.73|             0.74|\n|Osram_GW_CSSRM3.HW            |      5.69|           0.15|                0.76|             0.83|\n|Ledguhon_10WBVG14G24_Y6C_T4   |      3.14|           0.24|                0.76|             0.79|\n|Luminus_CXM_14_HS_12_36_AC30  |      4.14|           0.19|                0.78|             0.81|\n|Nichia_NFSW757G_Rsp0a         |      4.72|           0.17|                0.79|             0.82|\n|LCFOCUS_LC_10FSCOB1917_4000   |      4.93|           0.17|                0.80|             0.82|\n|Nichia_NFSL757GT_Rsp0a        |      4.71|           0.18|                0.80|             0.82|\n\n\n:::\n:::\n\n\nTo make the estimation errors easier to appreciate we plot Pfr:Ptot computed\nfrom the R:FR ratios vs. Pfr:Ptot computed from the spectra.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summaries.tb, aes(x = `Pfr:Ptot (spectrum)`, \n                         y = `Pfr:Ptot (ratio)`, \n                         label = paste(\"R:FR =\", round(`R:FR[q:q]`, 2)),\n                         colour = ifelse(`LED or daylight` == \"sun\",\n                                         \"sun\", \"LED\"))) +\n  geom_point() +\n  geom_abline(linetype = \"dashed\") +\n  geom_text_repel(min.segment.length = 0, size = 3, show.legend = FALSE) +\n  labs(colour = \"Light source\") +\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-8-1.svg)\n:::\n:::\n\n\nWe can see that in all cases Ptot:Pfr is overestimated when computed from the\nR:FR photon ratio. On the other hand the computation of Ptot:Pfr is based on\nthe incident spectrum instead of that inside the plant and based on properties\nof phytochromes measured in vitro. The Osram LED deviates the most, but it is\nnot intended to be used by itself, as it emits almost no red light.\n:::\n\nIn the case of monochromatic light we can still use the same functions, as the\ndefaults are such that we can use a single value as the 'w.length' argument, to\nobtain the Pfr:P ratio. For monochromatic light, irradiance is irrelevant for\nthe photoequilibrium (steady-state).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPfr_Ptot(660)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.869649\n```\n\n\n:::\n\n```{.r .cell-code}\nPfr_Ptot(735)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01749967\n```\n\n\n:::\n\n```{.r .cell-code}\nPfr_Ptot(c(660, 735))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.86964902 0.01749967\n```\n\n\n:::\n\n```{.r .cell-code}\nPfr_Ptot(435)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3859998\n```\n\n\n:::\n:::\n\n\nWe can also plot Pfr:Ptot as a function of wavelength (nm) of monochromatic\nlight. The default is to return a vector for short input vectors, and a\n`response_spct` object otherwise, but this can be changed through argument\n`spct.out`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(Pfr_Ptot(300:770), norm = NULL, unit.out = \"photon\",\n         w.band = Plant_bands(),\n         annotations = c(\"colour.guide\", \"labels\", \"boxes\", \"peaks\", \"valleys\"),\n         span = 31) +\n  labs(y = \"Phytochrome photoequilibrium, Pfr:Ptot ratio\")\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-10-1.svg)\n:::\n:::\n\n\nIt is, of course, also possible to use base R plotting functions, or as shown here functions from package 'ggplot2'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = Pfr_Ptot(300:770), aes(w.length, s.q.response)) +\n  geom_line() +\n  labs(x = \"Wavelength (nm)\",\n       y = \"Phytochrome photoequilibrium, Pfr:Ptot ratio\")\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-11-1.svg)\n:::\n:::\n\n\nIn the case of dichromatic illumination with red (660 nm) and far-red (730 nm) light, we can use a different function that takes the R:FR photon ratio as argument.\n\n**These computations are valid only for true mixes of light at these two wavelengths but not valid for broad spectra like sunlight and especially\ninaccurate for plant growth lamps with peaks in their output spectrum, such as most discharge lamps (sodium, mercury, multi-metal, fluorescent tubes) and many LED lamps.** \n\n\n::: {.cell}\n\n```{.r .cell-code}\nPfr_Ptot_R_FR(1.15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6919699\n```\n\n\n:::\n\n```{.r .cell-code}\nPfr_Ptot_R_FR(0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.04747996\n```\n\n\n:::\n\n```{.r .cell-code}\nPfr_Ptot_R_FR(c(1.15,0.01))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.69196990 0.04747996\n```\n\n\n:::\n:::\n\n\nIt is also easy to plot Pfr:P ratio as a function of R:FR photon ratio. However\nwe have to remember that such values are exact only for dichromatic light, and\nonly a very rough approximation for wide-spectrum light sources. For\nwide-spectrum light sources, the photoequilibrium should, if possible, be\ncalculated from spectral irradiance data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nex6.data <- data.frame(r.fr = seq(0.01, 10.0, length.out = 100), \n                       Pfr.p = numeric(100))\nex6.data$Pfr.p <- Pfr_Ptot_R_FR(ex6.data$r.fr)\nggplot(data = ex6.data, aes(r.fr, Pfr.p)) +\n  geom_line() +\n    labs(x =\"R:FR photon ratio\",\n         y = \"Phytochrome photoequilibrium, Pfr:Ptot ratio\")\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-13-1.svg)\n:::\n:::\n\n\nAs mentioned in the callout above, Kusuma and Bugbee (2021) proposed the use of\nFR/(R + FR) as an easier to understand quantity varying between 0 and 1. It can\nbe computed as 1 / (1 + R:FR), so we plot Pfr;Ptot also as a function of this\n\"FR fraction\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ex6.data, aes(1 / (1 + r.fr), Pfr.p)) +\n  geom_line() +\n    labs(x =\"FR photon fraction, FR:(R+FR)\",\n         y = \"Phytochrome photoequilibrium, Pfr:Ptot ratio\")\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-14-1.svg)\n:::\n:::\n\n\nWe see, indeed, that the relationship is in this case less asymptotic, so not\nonly the range 0 to 1 is easier to interpret but can be expected to better\nreflect plant responses as shown by Kusuma and Bugbee (2021).\n\n::: callout-note\nAs red and far-red LEDs do not emit monochromatic ligth, we may want to check the photoequilibrium based on the spectrum.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRFR_leds.mspct <- leds.mspct[unique(grep(\"^Quantum\", c(red_leds, ir_leds), value = TRUE))]\nRFR_leds.mspct <- normalize(RFR_leds.mspct)\nautoplot(RFR_leds.mspct, idfactor = \"LED\", span = 101, facets = 2)\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-15-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummaries.tb <- R_FR(RFR_leds.mspct)\nsummaries.tb[[\"spct.idx\"]] <- gsub(\"_\", \" \", summaries.tb[[\"spct.idx\"]])\nsummaries.tb[[\"FR:(R+FR)[q:q]\"]] <- 1 / (1 + summaries.tb[[\"R:FR[q:q]\"]])\nsummaries.tb[[\"Pfr:Ptot (spectrum)\"]] <-\n  msdply(RFR_leds.mspct, Pfr_Ptot)[[2]]\nsummaries.tb[[\"Pfr:Ptot (nominal peak)\"]] <- Pfr_Ptot(c(660, 680, 700, 735))\nknitr::kable(summaries.tb, digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|spct.idx                 | R:FR[q:q]| FR:(R+FR)[q:q]| Pfr:Ptot (spectrum)| Pfr:Ptot (nominal peak)|\n|:------------------------|---------:|--------------:|-------------------:|-----------------------:|\n|QuantumDevices QDDH66002 |  2431.821|          0.000|               0.862|                   0.870|\n|QuantumDevices QDDH68002 |   216.396|          0.005|               0.821|                   0.799|\n|QuantumDevices QDDH70002 |     0.155|          0.866|               0.370|                   0.297|\n|QuantumDevices QDDH73502 |     0.002|          0.998|               0.038|                   0.017|\n\n\n:::\n:::\n\n\n:::\n\n### Reaction rates\n\nTo compute actual reactions rates we have to use actual spectral irradiances. \nUsing normalized spectra gives wrong results as the reaction rates depend on the\nflow rate of photons of different wavelengths. This is different to the \nR:FR photon ratio and the Pfr:Ptot ratio at the photoequilibrium which depend\non the relative abundance of photons of different wavelengths, as the assumption\nis that expossure has been enough for steady-state photoequilibrium.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(clip_wl(sun.spct, c(300,770)), \n     Phy_reaction_rates(w.length, s.e.irrad))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$k1\n[1] 1.25935\n\n$k2\n[1] 0.5833947\n\n$nu\n[1] 1.842745\n```\n\n\n:::\n:::\n\n\n### Absorption cross section vs. wavelength\n\nThe phytochrome photoequilibrium cannot be calculated from the absorptance spectra\nof Pr and Pfr, because Pr and Pfr have different quantum yields for the\nrespective phototransformations. We need to use action spectra, which in this\ncontext are usually called 'absorption cross-sections'. They can be calculated\nas the product of absorptance and quantum yield. The values in these spectra,\nin the case of Phy are called `Sigma'.\n\nHere we reproduce Figure 3 in Mancinelli (1994), which gives the 'Relative photoconversion cross-sections' of Pr ($\\sigma_R$) and Pfr ($\\sigma_{FR}$). The values are expressed relative to $\\sigma_R$ at its maximum at $\\lambda = 666$ nm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nex7.data <- \n  data.frame(w.length=seq(300, 770, length.out=100))\nex7.data$sigma.r <- Phy_Sigma_R(ex7.data$w.length)\nex7.data$sigma.fr <- Phy_Sigma_FR(ex7.data$w.length)\nex7.data$sigma <- Phy_Sigma(ex7.data$w.length)\nggplot(ex7.data, aes(x = w.length)) +\n  geom_line(aes(y = sigma.r/ max(sigma.r)), colour = \"red\") +\n  geom_line(aes(y = sigma.fr/ max(sigma.r))) +\n  labs(x = \"Wavelength (nm)\", \n       y = expression(sigma[R]~\"and\"~sigma[FR]))\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-18-1.svg)\n:::\n\n```{.r .cell-code}\nrm(ex7.data) # clean up\n```\n:::\n\n\n## Cryptochromes\n\nThe absorbance spectrum of crytpchromes has been shown to change upon exposure\nto light and its dynamics described. However, while for phytochromes rather good\ndata are available both for absorption and quantum efficiency, for the other\nfamilies of plant photoreceptors informations is not as readily available.\n\n### Spectral absorbance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(CRYs.mspct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CRY1_dark\"  \"CRY1_light\" \"CRY2_dark\"  \"CRY2_light\" \"CRY3_dark\" \n```\n\n\n:::\n:::\n\n\nHere we approximate Figure 1.B from Banerjee et al.\\ (2007).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA_as_default()\nautoplot(interpolate_wl(CRYs.mspct$CRY2_dark, 300:500), \n         span = 31, annotations = c(\"+\", \"valleys\"))\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-20-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(CRYs.mspct[c(\"CRY2_dark\", \"CRY2_light\")], \n         range = c(300,700), span = 51, annotations = c(\"+\", \"valleys\")) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-21-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(CRYs.mspct[c(\"CRY1_dark\", \"CRY1_light\")], \n         span = 51, annotations = c(\"+\", \"valleys\")) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-22-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(CRYs.mspct[\"CRY3_dark\"], range = c(300,700),\n         span = 31, annotations = c(\"+\", \"valleys\"))\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-23-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(CRYs.mspct[c(\"CRY1_dark\", \"CRY2_dark\", \"CRY3_dark\")]) +\n  geom_line(aes(linetype = spct.idx)) +\n  expand_limits(x = 300) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-24-1.svg)\n:::\n:::\n\n\n## Phototropins\n\n### Spectral absorbance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(PHOTs.mspct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PHOT1_fluo\"  \"PHOT2_fluo\"  \"PHOT1_dark\"  \"PHOT1_light\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(PHOTs.mspct[c(\"PHOT1_fluo\", \"PHOT2_fluo\")],\n         span = 31, annotations = c(\"+\", \"valleys\")) +\n  expand_limits(x = 300) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-26-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(PHOTs.mspct[c(\"PHOT1_dark\", \"PHOT1_light\")], \n         span = 21, annotations = c(\"+\", \"valleys\")) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-27-1.svg)\n:::\n:::\n\n\n## UVR8\n\n### Spectral absorbance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(UVR8s.mspct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"UVR8.abs.Glasgow\" \"UVR8.abs.Orebro\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(UVR8s.mspct, span = 51, annotations = c(\"+\", \"valleys\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-29-1.svg)\n:::\n:::\n\n\n## Zeitloupe proteins\n\n### Spectral absorbance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(ZTLs.mspct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ZTL_dark\"  \"ZTL_light\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(ZTLs.mspct, span = 21, annotations = c(\"+\", \"valleys\")) +\n  expand_limits(x = 300) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in normalize_spct(spct = T2A(x, action = \"replace.raw\"), range = range,\n: Object contains data for 2 spectra; skipping normalization\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](plant-photoreceptors_files/figure-html/unnamed-chunk-31-1.svg)\n:::\n:::\n",
    "supporting": [
      "plant-photoreceptors_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}