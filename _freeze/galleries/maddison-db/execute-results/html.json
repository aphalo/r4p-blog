{
  "hash": "762fb6ceb4151a03b298a6b6a2b44bc9",
  "result": {
    "markdown": "---\ntitle: \"Maddison 2020 database of GDP\"\nsubtitle: \"Plotting examples making use of 'ggpp' and 'ggpmisc'\"\nauthor: \"Pedro J. Aphalo\"\ndate: 2023-03-04\n---\n\n\n# Under construction!!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpmisc)\nlibrary(ggrepel)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(dplyr)\n```\n:::\n\n\nThe database is available on-line at the [Maddison project page](https://www.rug.nl/ggdc/historicaldevelopment/maddison/releases/maddison-project-database-2020?lang=en).\nI will use a locally cached copy of the file, the code below downloads the file\nonly if the local copy does not already exist.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!file.exists(\"mpd2020.xlsx\")) {\n  download.file(\"https://www.rug.nl/ggdc/historicaldevelopment/maddison/data/mpd2020.xlsx\",\n                destfile = \"mpd2020.xlsx\",\n                mode = \"wb\")\n}\n\n# full data in long form\nmaddison2020_Full.df <- read_xlsx(\"mpd2020.xlsx\", sheet = \"Full data\")\ncolnames(maddison2020_Full.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"countrycode\" \"country\"     \"year\"        \"gdppc\"       \"pop\"        \n```\n:::\n\n```{.r .cell-code}\nnrow(maddison2020_Full.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21682\n```\n:::\n\n```{.r .cell-code}\nunique(maddison2020_Full.df$countrycode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"AFG\" \"AGO\" \"ALB\" \"ARE\" \"ARG\" \"ARM\" \"AUS\" \"AUT\" \"AZE\" \"BDI\" \"BEL\" \"BEN\"\n [13] \"BFA\" \"BGD\" \"BGR\" \"BHR\" \"BIH\" \"BLR\" \"BOL\" \"BRA\" \"BRB\" \"BWA\" \"CAF\" \"CAN\"\n [25] \"CHE\" \"CHL\" \"CHN\" \"CIV\" \"CMR\" \"COD\" \"COG\" \"COL\" \"COM\" \"CPV\" \"CRI\" \"CSK\"\n [37] \"CUB\" \"CYP\" \"CZE\" \"DEU\" \"DJI\" \"DMA\" \"DNK\" \"DOM\" \"DZA\" \"ECU\" \"EGY\" \"ESP\"\n [49] \"EST\" \"ETH\" \"FIN\" \"FRA\" \"GAB\" \"GBR\" \"GEO\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"GNQ\"\n [61] \"GRC\" \"GTM\" \"HKG\" \"HND\" \"HRV\" \"HTI\" \"HUN\" \"IDN\" \"IND\" \"IRL\" \"IRN\" \"IRQ\"\n [73] \"ISL\" \"ISR\" \"ITA\" \"JAM\" \"JOR\" \"JPN\" \"KAZ\" \"KEN\" \"KGZ\" \"KHM\" \"KOR\" \"KWT\"\n [85] \"LAO\" \"LBN\" \"LBR\" \"LBY\" \"LCA\" \"LKA\" \"LSO\" \"LTU\" \"LUX\" \"LVA\" \"MAR\" \"MDA\"\n [97] \"MDG\" \"MEX\" \"MKD\" \"MLI\" \"MLT\" \"MMR\" \"MNE\" \"MNG\" \"MOZ\" \"MRT\" \"MUS\" \"MWI\"\n[109] \"MYS\" \"NAM\" \"NER\" \"NGA\" \"NIC\" \"NLD\" \"NOR\" \"NPL\" \"NZL\" \"OMN\" \"PAK\" \"PAN\"\n[121] \"PER\" \"PHL\" \"POL\" \"PRI\" \"PRK\" \"PRT\" \"PRY\" \"PSE\" \"QAT\" \"ROU\" \"RUS\" \"RWA\"\n[133] \"SAU\" \"SDN\" \"SEN\" \"SGP\" \"SLE\" \"SLV\" \"SRB\" \"STP\" \"SUN\" \"SVK\" \"SVN\" \"SWE\"\n[145] \"SWZ\" \"SYC\" \"SYR\" \"TCD\" \"TGO\" \"THA\" \"TJK\" \"TKM\" \"TTO\" \"TUN\" \"TUR\" \"TWN\"\n[157] \"TZA\" \"UGA\" \"UKR\" \"URY\" \"USA\" \"UZB\" \"VEN\" \"VNM\" \"YEM\" \"YUG\" \"ZAF\" \"ZMB\"\n[169] \"ZWE\"\n```\n:::\n\n```{.r .cell-code}\n# regional data in wide form\nheader.df <- read_xlsx(\"mpd2020.xlsx\", sheet = \"Regional data\", n_max = 3)\ndata.df <- read_xlsx(\"mpd2020.xlsx\", sheet = \"Regional data\", skip = 2)\ncolnames(data.df) <- c(\"Year\", as.character(header.df[1, ])[-1])\n# ncol(data.df)\n\n# regional data in long form\nGDPpc.df <- \n  pivot_longer(data.df[c(1:9, 19)], \n               values_to = \"GDPpc\", \n               names_to = \"region\",\n               cols = colnames(data.df)[c(2:9)])\ncolnames(GDPpc.df) <- \n  gsub(\"World GDP pc\", \"GDPpc_World\", colnames(GDPpc.df))\n\n\npopulation.df <-\n  pivot_longer(data.df[c(1, 10:18)], \n               values_to = \"population\", \n               names_to = \"region\",\n               cols = colnames(data.df)[10:17])\ncolnames(population.df) <- \n  gsub(\"World\", \"population_World\", colnames(population.df))\n\nmaddison2020_Regional.df <- full_join(GDPpc.df, population.df)\ncolnames(maddison2020_Regional.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Year\"             \"GDPpc_World\"      \"region\"           \"GDPpc\"           \n[5] \"population_World\" \"population\"      \n```\n:::\n\n```{.r .cell-code}\nnrow(maddison2020_Regional.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 184\n```\n:::\n\n```{.r .cell-code}\nmaddison2020_World.df <- rename(data.df[ , c(\"Year\", \"World\", \"World GDP pc\")],\n                                year = Year,\n                                pop_World = World,\n                                gdp_World = \"World GDP pc\")\n\nmaddison2020_Combined.df <- \n  left_join(maddison2020_Full.df,\n            maddison2020_World.df, \n            by = \"year\", multiple = \"first\")\n\n# cleanup\nrm(header.df, data.df, GDPpc.df, population.df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(maddison2020_Regional.df, \n       aes(Year, GDPpc, colour = region)) +\n  geom_line(na.rm = TRUE) +\n  scale_x_continuous(limits = c(1900, NA)) +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Full.df, \n              year >= 1905 & countrycode %in% \n                c(\"ARG\", \"CHL\", \"BOL\", \"BRA\", \"URY\", \"VEN\", \"COL\", \"CUB\", \"MEX\", \"PER\")), \n       aes(year, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE) +\n  geom_text_repel(data = function(x) {subset(x, year == 2018)},\n             position = position_nudge_to(x = 2025), colour = \"black\", size = 2.5,\n             direction = \"y\", box.padding = 0.1, min.segment.length = 0) +\n  geom_text_repel(data = function(x) {subset(x, year == 1905)},\n             position = position_nudge_to(x = 1898), colour = \"black\", size = 2.5,\n             direction = \"y\", box.padding = 0.1, min.segment.length = 0) +\n  scale_y_log10(breaks = c(500, 1000, 2000, 5000, 10000, 20000), limits = c(500, 25000))\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Full.df, year >= 2000 & countrycode %in% c(\"ARG\", \"CHL\", \"BOL\", \"BRA\", \"URY\", \"VEN\", \"COL\", \"CUB\", \"NIC\", \"MEX\", \"PER\")), \n       aes(year, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE) +\n  geom_text_repel(data = function(x) {subset(x, year == 2018)},\n             position = position_nudge_to(x = 2019), colour = \"black\", size = 3,\n             direction = \"y\", box.padding = 0.1, min.segment.length = 0) +\n  geom_text_repel(data = function(x) {subset(x, year == 2000)},\n             position = position_nudge_to(x = 1999), colour = \"black\", size = 3,\n             direction = \"y\", box.padding = 0.1, min.segment.length = 0) +\n  expand_limits(x = c(1998, 2020)) +\n  scale_y_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(2000, 25000)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Combined.df, year >= 1900 & \n                countrycode %in% \n                c(\"ARG\", \"CHL\", \"BOL\", \"BRA\", \"URY\", \"VEN\", \"COL\", \"CUB\", \"NIC\", \"MEX\", \"PER\")), \n       aes(gdp_World, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE, na.rm = TRUE) +\n  geom_abline(linetype = \"dotted\") +\n  scale_y_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(2000, 20000)) +\n  scale_x_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(2000, 20000)) +\n  facet_wrap(facets = vars(country), ncol = 5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Combined.df, year >= 1900 & \n                countrycode %in% \n                c(\"FIN\", \"SWE\", \"FRA\", \"GBR\", \"POL\", \"ESP\", \"ITA\", \"DEU\", \"NLD\", \"PRT\")), \n       aes(gdp_World, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE, na.rm = TRUE) +\n  geom_abline(linetype = \"dotted\") +\n  scale_y_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(2000, 20000)) +\n  scale_x_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(2000, 20000)) +\n  facet_wrap(facets = vars(country), ncol = 5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Combined.df, year >= 1900 & \n                countrycode %in% \n                c(\"UGA\", \"GAB\", \"EGY\", \"TUN\", \"KEN\", \"LBR\", \"ZAF\", \"TCD\", \"SEN\", \"BWA\")), \n       aes(gdp_World, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE, na.rm = TRUE) +\n  geom_abline(linetype = \"dotted\") +\n  scale_y_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(1000, 20000)) +\n  scale_x_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(1000, 20000)) +\n  facet_wrap(facets = vars(country), ncol = 5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(maddison2020_Combined.df, year >= 1900 & \n                countrycode %in% \n                c(\"RUS\", \"UKR\", \"ARM\", \"AZE\", \"BLR\", \"UZB\")), \n       aes(gdp_World, gdppc, colour = country, label = countrycode)) +\n  geom_line(show.legend = FALSE, na.rm = TRUE) +\n  geom_abline(linetype = \"dotted\") +\n  scale_y_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(3000, 20000)) +\n  scale_x_log10(breaks = c(2000, 5000, 10000, 20000), limits = c(3000, 20000)) +\n  facet_wrap(facets = vars(country), ncol = 5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](maddison-db_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "maddison-db_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}