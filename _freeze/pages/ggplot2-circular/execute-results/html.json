{
  "hash": "cbea6497e8bb16cb824368c0df414243",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Plotting circular data with 'ggplot2'\"\nsubtitle: \"\"\nauthor: \"Pedro J. Aphalo\"\ndate: 2024-03-06\ndate-modified: 2024-03-06\ncategories: [R, plotting]\nkeywords: [ggplot2 pkg, data visualization, dataviz]\nformat:\n  html:\n    code-fold: false\n    code-tools: true\nbibliography: design-exp.bib\ndraft: true\nabstract: |\n  Missing.\n---\n\n\n::: callout-note\nTo see the source of this document click on \"</> CODE\" to the right of the\npage title. The page is written using [Quarto](https://quarto.org/) which is an enhanced version of [R Markdown](https://rmarkdown.rstudio.com/). The diagrams are created with [Mermaid](https://mermaid.js.org/), a language inspired by the simplicity of [Markdown](https://daringfireball.net/projects/markdown/syntax).\n:::\n\n::: callout-warning\nPackage ['ggplot2'](https://ggplot2.tidyverse.org/) has gained new features over its long life, and although few changes have been 'code breaking' you should be aware that the examples in this page have been tested with version (==3.5.0).\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(learnrbook) # for the wind data\n```\n:::\n\n\n## Introduction\n\nCircular plots can be disk-shaped or doughnut-shaped. They can be used to plot both\nlinear and circular data. These plots use **two** coordinate axes, the angle\naround the circle and the radius of the circle to represent information from\npairs of values. Pie-charts have values along a single positional axis, the\nangle around the circle, and will not be considered further here.\n\nAll variations of round-shaped plots are, of course, most suitable for plotting\ncircular data, such as angles or positions along a closed loop. \nLinear data can be plotted on a circle by bending one of the linear axes of\nthe Cartesian coordinates into a circle or arc and projecting the other linear\naxis onto the radius. This is artificial, and can be quite\nconfusing for the reader.\n\nExamples of circular data are wind direction, various measurements relative to\nthe time-of-day, gene positions in circular chromosomes in some bacteria and\nin cell organelles. When we plot individual observations as points, adding \n`coord_polar()` or `coord_radial()` to a ggplot creates a circular plot.\n\nWhen we plot individual observations @fig-scatter, or apply binning such that one boundary \nbetween bins falls at the closing point of the circle (0/360 degrees) @fig-histogram, plots\nfor circular data work well even if the coordinate system is a bent line\nrather than a closed circle.\n\n::: {#fig-scatter layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- \n  ggplot(viikki_d29.dat, aes(WindDir_D1_WVT, WindSpd_S_WVT)) +\n  geom_point(alpha = 0.15) +\n  scale_x_continuous(expand = expansion(0, 0), \n                     limits = c(0, 360),\n                     breaks = 0:3 * 90) +\n  scale_y_continuous(expand = expansion(c(0, 0.05)))\n\np + coord_radial()\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-2-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np + coord_radial(inner.radius = 1/5)\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-3-1.svg)\n:::\n:::\n\n\nScatterplots of wind speed vs. direction.\n:::\n\n::: {#fig-histogram layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- \n  ggplot(viikki_d29.dat, aes(WindDir_D1_WVT)) +\n  stat_bin(binwidth = 22.5, boundary = 0) +\n  scale_x_continuous(expand = expansion(0, 0), \n                     limits = c(0, 360),\n                     breaks = 0:3 * 90) +\n  scale_y_continuous(expand = expansion(c(0, 0.05)))\n\np + coord_radial()\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-4-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np + coord_radial(inner.radius = 1/5)\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-5-1.svg)\n:::\n:::\n\n\nHistogram of wind direction.\n:::\n\nWith the histogram above @fig-histogram we were constrained in our choice of \n`boundary` between bins. When fitting a probability density to circular data,\nif we fit probability distribution that ignores circularity, the plot created\ncontains a spurious break or discontinuity where the two ends meet at 0 degrees \n@fig-windrose.\n\n::: {#fig-windrose layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# the y scale expansion needs to be set to 0 to avoid a hole in the center\n# the x scale expansion needs to be set to 0, so that 0 degrees and 360 degrees meet\n\np <- \n  ggplot(viikki_d29.dat, aes(WindDir_D1_WVT)) +\n  stat_density(geom = \"area\", fill = \"grey50\") +\n  scale_x_continuous(expand = expansion(0, 0), \n                     limits = c(0, 360),\n                     breaks = 0:3 * 90) +\n  scale_y_continuous(expand = expansion(c(0, 0.05)))\n\np + coord_radial()\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-6-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np + coord_radial(inner.radius = 1/5)\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-7-1.svg)\n:::\n:::\n\n\nA 1D density function fitted to circular data.\n:::\n\n::: {#fig-windrose-speed layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- \n  ggplot(viikki_d29.dat, aes(WindDir_D1_WVT, WindSpd_S_WVT)) +\n  stat_density_2d_filled(alpha = 0.66) +\n  scale_x_continuous(expand = expansion(0, 0), \n                     limits = c(0, 360),\n                     breaks = 0:3 * 90) +\n  scale_y_continuous(expand = expansion(c(0, 0.05))) +\n  theme(legend.position = \"none\")\n\np + coord_radial()\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-8-1.svg)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np + coord_radial(inner.radius = 1/5)\n```\n\n::: {.cell-output-display}\n![](ggplot2-circular_files/figure-html/unnamed-chunk-9-1.svg)\n:::\n:::\n\n\nA 2D density function fitted to circular data.\n:::\n\nTo solve these problems new appropriate `stats` are needed, while existing\ngeometries are enough.\n\n## What next?\n \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- \n  ggplot(viikki_d29.dat, aes(WindDir_D1_WVT)) +\n  stat_bin(fill = \"grey50\", binwidth = 11.25) +\n  scale_x_continuous(expand = expansion(0, 0), \n                     limits = c(0, 360),\n                     breaks = 0:3 * 90) +\n  scale_y_continuous(expand = expansion(c(0, 0.05)))\n\np + coord_radial()\n\np + coord_polar()\n\np + coord_radial() +\n  facet_wrap(facets = vars(ifelse(hour(solar_time) < 12, \"AM\", \"PM\")))\n\np + coord_radial(inner.radius = 1/3)\n```\n:::\n\n\n## Bent plots\n\nData that are not circular, i.e., that have a linear sequence of values from a minimum to a maximum can be _bent_ into a curve, as in @fig-USB-cheating, or even into a full circle, however they have a discontinuity at their ends.\n\n![Panel meters for USB speed. Is this a case of cheating?](./circular-figures/USB-cheating.png){#fig-USB-cheating  fig-align=\"center\"}\n",
    "supporting": [
      "ggplot2-circular_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}