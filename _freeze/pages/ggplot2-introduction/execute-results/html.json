{
  "hash": "7e96d72fbe3fe630cb4d7179417f5ead",
  "result": {
    "markdown": "---\ntitle: \"'ggplot2' basics (DRAFT)\"\nsubtitle: \"The Layeerd Grammar of Graphics\"\nauthor: \"Pedro J. Aphalo\"\ndate: 2022-05-03\ndate-modified: 2023-05-03\ncategories: [R, plotting]\nkeywords: [ggplot2 pkg, data visualization, dataviz]\ncode-fold: false\n---\n\n\n::: callout-warning\nPackage ['ggplot2'](https://ggplot2.tidyverse.org/) has gained new features over its long life, and although few changes have been 'code brealking' you should be aware that the examples in this page have been tested with version (==3.4.2).\n:::\n\n## The main steps\n\n1.    Build an R object with data and instructions for making the plot.\n\n1.    (Possibly add to or even \"edit\" the R object).\n\n2.    \"Render\" the plot (convert it into a graphical object).\n\n3.    Display the graphical object or save it in a file.\n\n## The data flow\n\n\n```{mermaid}\n%%| fig-align: center\nflowchart LR\n  A[Layer data] --> B[statistic] --> C[geometry] --> d[layer 'grobs']\n  A --> b[identity\\nstatistic] --> C\n```\n\n\n## Building a plot step by step\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(gginnards)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars)\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg))\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point(color = \"red\", shape = \"square\")\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  stat_smooth(geom = \"line\", method = \"lm\", formula = y ~ x)\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  stat_smooth(geom = \"line\", method = \"lm\", formula = y ~ x) +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  stat_smooth(geom = \"line\", method = \"lm\", formula = y ~ x) +\n  coord_cartesian(ylim = c(15, 25))\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  stat_smooth(geom = \"line\", method = \"lm\", formula = y ~ x) +\n  coord_trans(y = \"log10\")\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  theme_classic(base_size = 20, base_family = \"serif\")\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = disp, y = mpg)) +\n  geom_point() +\n  labs(x = \"Engine displacement (cubic inches)\",\n       y = \"Fuel use efficiency\\n(miles per gallon)\",\n       title = \"Motor Trend Car Road Tests\",\n       subtitle = \"Source: 1974 Motor Trend US magazine\")\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars, aes(x = disp / cyl, y = mpg)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](ggplot2-introduction_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## The internals\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point()\nsummary(p)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndata: manufacturer, model, displ, year, cyl, trans, drv, cty, hwy, fl,\n  class [234x11]\nmapping:  x = ~displ, y = ~hwy\nfaceting: <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg>\n-----------------------------------\ngeom_point: na.rm = FALSE\nstat_identity: na.rm = FALSE\nposition_identity \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(p, max.level = 1, list.len = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nObject size: 29.3 kB\nList of 9\n $ data       : tibble [234 Ã— 11] (S3: tbl_df/tbl/data.frame)\n $ layers     :List of 1\n $ scales     :Classes 'ScalesList', 'ggproto', 'gg' <ggproto object: Class ScalesList, gg>\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  <ggproto object: Class ScalesList, gg> \n $ mapping    :List of 2\n  [list output truncated]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(p$layers, max.level = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: NULL\n    computed_mapping: NULL\n    computed_stat_params: NULL\n    constructor: call\n    data: waiver\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomPoint, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: size shape colour\n        optional_aes: \n        parameters: function\n        rename_size: FALSE\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class Geom, gg>\n    geom_params: list\n    inherit.aes: TRUE\n    layer_data: function\n    map_statistic: function\n    mapping: NULL\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatIdentity, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        dropped_aes: \n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: \n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> \n```\n:::\n:::\n",
    "supporting": [
      "ggplot2-introduction_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}