{
  "hash": "b0c21afdcc3c048700386b818ff8d556",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Flow of code execution\"\nsubtitle: \"Changing thesequence\"\nauthor: \"Pedro J. Aphalo\"\ndate: \"2023-11-14\"\nformat:\n  html:\n    mermaid:\n      theme: neutral\ncode-fold: show\n---\n\n\n# Unconditional sequence\n\n\n```{mermaid}\nflowchart LR\n  st1[statement 1] --> st2[statement 2] --> st3[statement 3] --> st4[etc.]\n\n```\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 123\nb <- a * 2\nprint(b)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 246\n```\n\n\n:::\n:::\n\n```{mermaid}\nflowchart LR\n  st1[\"a <- 123\"] --> st2[\"b <- a * 2\"] --> st3[\"print(b)\"]\n```\n\n\n# Compound statement\n\n\n```{mermaid}\nflowchart LR\n  st1[statement 1] --> st2[statement 2]\n  subgraph \"compound statement\" \n  st2 --> st3[statement 3] \n  end \n  st3 --> etc.  \n```\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 123\n{\n  b <- a * 2\n  print(b)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 246\n```\n\n\n:::\n:::\n\n```{mermaid}\nflowchart LR\n  st1[\"a <- 123\"] --> st2[\"b <- a * 2\"]\n  subgraph \"compound statement\" \n  st2 --> st3[\"print(b)\"] \n  end \n  st3 --> etc.  \n```\n\n\n# Conditional sequence\n## `if` statement\n\n\n```{mermaid}\nflowchart LR\n  st1[statement 1] --> st2{condition} --FALSE--> st4[statement 4]\n  st2 --TRUE--> st3[statement 3]\n  st3 --> st4\n```\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 123\nif (a > 0) {\n  print(\"'a' is positive\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"'a' is positive\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 123\n```\n\n\n:::\n:::\n\n```{mermaid}\nflowchart LR\n  st1[\"a <- 123\"] --> st2{\"if (a >= 0)\"} --FALSE--> st4[\"print(a)\"]\n  st2 --TRUE--> st3[\"print(#quot; 'a' is positive#quot;)\"]\n  st3 --> st4\n```\n\n\n## `if`... `else` statement\n\n\n```{mermaid}\nflowchart LR\n  st1[statement 1] --> st2{condition} --FALSE--> st3a[statement 3a]\n  st2 --TRUE--> st3b[statement 3b]\n  st3a --> st4[statement 4]\n  st3b --> st4\n```\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 123\nif (a >= 0) {\n  print(\"'a' is positive\")\n} else {\n  print(\"'a' is negative\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"'a' is positive\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 123\n```\n\n\n:::\n:::\n\n```{mermaid}\nflowchart LR\n  st1[\"a <- 123\"] --> st2{\"if (a >= 0) ... else ...\"} --FALSE--> st3a[\"print(#quot; 'a' is negative#quot;)\"]\n  st2 --TRUE--> st3b[\"print(#quot; 'a' is positive#quot;)\"]\n  st3a --> st4[\"print(a)\"]\n  st3b --> st4\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}